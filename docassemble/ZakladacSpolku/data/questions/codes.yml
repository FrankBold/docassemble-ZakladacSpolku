# Označení vlastník/spoluvlastníci podle počtu
code: |
  if Spolek.sidlo.vlastnik.vice == False:
    Spolek.sidlo.vlastnik.pocet = 1
    vlastnik = "Vlastník"
  else:
    vlastnik = "Spoluvlastníci"
---
# Pokud má spolek předsedu, je člen orgánu 1
code: |
  if Spolek.statutar.druh == 'predseda':
    Spolek.statutar.clen.target_number = 1
---
# Pokud má spolek v easy verzi předsedu nemá smysl se ptát, zda chce pro každého separé dokument, neboť je pouze jeden.
code: |
  if minimalVerze:
    if Spolek.statutar.druh == 'predseda':
      hromadne = False
    hospCinnost = False
---
# Převod vyplněných účelů a činností na jednotlivé položky podle odentrování.
code: |
  ucelySeznam = string_pole(Spolek.ucel)
  cinnostiSeznam = string_pole(Spolek.cinnosti)
  if minimalVerze == False:
    if hospCinnost:
      zivnostSeznam = string_pole(Spolek.zivnost)
---
# Při easy verzi se doplní standardní pravomoce. U pokročilé se vyplní podle toho, co uživatel uvedl.
sets: pravomociSeznam
code: |
  if minimalVerze:
    pravomociSeznam = ["přijímá členy", "rozhoduje o výši a splatnosti členského příspěvku", "volí a odvolává statutární orgán", "rozhoduje o změně stanov"]
  else:
    pravomociSeznam = string_pole(Spolek.nejvyssiOrgan.pravomoc)
---
# Naplnění PartyListu tolika osobami, kolik členů orgánu uživate l uvedl. Spolu se správným pojmenováním.
# Je potřeba je předvytvořit. DA se pak ptá na jejich údaje, dokud mu nejdojdou položky.
# Pokud uživatel nevyplňuje osobní údaje, rovnou se vloží Anonymní varianta.
code: |
  count = 1
  Spolek.statutar.clen.there_are_any = True
  while count <= Spolek.statutar.clen.target_number:
    if osobniUdaje == False:
      Spolek.statutar.clen.append(Anonym)
    else:
      Spolek.statutar.clen.appendObject(Individual)
      if Spolek.statutar.druh == 'predseda':
        Spolek.statutar.clen[-1].label = 'předsedy'
      else:
        Spolek.statutar.clen[-1].label = 'člena výboru'
    Spolek.statutar.clen[-1].cislo = count
    count = count + 1
  Spolek.statutar.clen.there_is_another = False
---
# Totéž co výše, jen pro kontrolní komisi
code: |
  count = 1
  Spolek.kontrolniKomise.there_are_any = True
  while count <= Spolek.kontrolniKomise.target_number:
    if osobniUdaje == False:
      Spolek.kontrolniKomise.append(Anonym)
    else:
      Spolek.kontrolniKomise.appendObject(Individual)
      Spolek.kontrolniKomise[-1].label = 'člena kontrolní komise'
    Spolek.kontrolniKomise[-1].cislo = count
    count = count + 1
  Spolek.kontrolniKomise.there_is_another = False
---
# Totéž co výše, jen pro kontrolní komisi.
code: |
  count = 1
  Spolek.rozhodciKomise.there_are_any = True
  while count <= Spolek.rozhodciKomise.target_number:
    if osobniUdaje == False:
      Spolek.rozhodciKomise.append(Anonym)
    else:
      Spolek.rozhodciKomise.appendObject(Individual)
      Spolek.rozhodciKomise[-1].label = 'člena rozhodčí komise'
    Spolek.rozhodciKomise[-1].cislo = count
    count = count + 1
  Spolek.rozhodciKomise.there_is_another = False
---
# -||- pro Radu spolku
code: |
  count = 1
  Spolek.rada.there_are_any = True
  while count <= Spolek.rada.target_number:
    if osobniUdaje == False:
      Spolek.rada.append(Anonym)
    else:
      Spolek.rada.appendObject(Individual)
      Spolek.rada[-1].label = 'člena rady spolku'
    Spolek.rada[-1].cislo = count
    count = count + 1
  Spolek.rada.there_is_another = False
---
# -||- pro vlasníky/spoluvlastíky sídla
code: |
  count = 1
  Spolek.sidlo.vlastnik.there_are_any = True
  while count <= Spolek.sidlo.vlastnik.pocet:
    if osobniUdaje == False:
      Spolek.sidlo.vlastnik.append(Anonym)
    else:
      Spolek.sidlo.vlastnik.appendObject(Individual)
    Spolek.sidlo.vlastnik[-1].cislo = count
    count = count + 1
  Spolek.sidlo.vlastnik.there_is_another = False
---
# -||- pro navrhovatele zápisu. Je buď jeden při Ustavující schůzi nebo dle počtu zakládajících členů.
code: |
  count = 1
  if Spolek.statutar.clen.there_is_another == False:
    Spolek.zalozeni.navrhovatel.there_are_any = True
    if Spolek.zalozeni.typ == 'schuze':
      Spolek.zalozeni.navrhovatel.pocet = 1
    else:
      Spolek.zalozeni.navrhovatel.pocet = 3
    while count <= Spolek.zalozeni.navrhovatel.pocet:
      if osobniUdaje == False:
        Spolek.zalozeni.navrhovatel.append(Anonym)
      else:
        Spolek.zalozeni.navrhovatel.appendObject(Individual)
        Spolek.zalozeni.navrhovatel[-1].label = 'zakládajícího člena'
      Spolek.zalozeni.navrhovatel[-1].cislo = count
      count = count + 1
    Spolek.zalozeni.navrhovatel.there_is_another = False
---
# Správné označení vlastníka nemovitosti.
code: |
  if Spolek.sidlo.vlastnik.vice == False:
    Spolek.sidlo.vlastnik[i].label = 'vlastníka nemovitosti'
  else:
    Spolek.sidlo.vlastnik[i].label = 'spoluvlastníka nemovitosti'
---
# Pokud ustavujícíc schůze je počet zakladatelů 1. Jde sice o navrhovatele, ale chová se pak stejně jako zakladatel.
code: |
  if Spolek.zalozeni.typ == 'schuze':
    Spolek.zalozeni.pocetZakladatelu = 1
---
scan for variables: False
event: obsah_pozdeji
code: |
  q = action_argument('que')
  if q == "identifikaceSpolku":
    Spolek.name.text = "[Název spolku]"
    Spolek.address = "[Sídlo spolku]"
  elif q == "cinnostSpolku":
    Spolek.ucel = "[Účel spolku]"
    Spolek.cinnosti = "[Činnost spolku]"
    Spolek.popis = "[Popis spolku]"
    hospCinnost = False
  elif q == "sidlo":
    Spolek.sidlo.typ = "domu"
    Spolek.sidlo.vlastnik.vice = False
    Spolek.sidlo.vlastnik.appendObject(Individual)
    Spolek.sidlo.vlastnik[0].name.first = "[Jméno a příjmení]"
    Spolek.sidlo.vlastnik[0].address = "[Bydliště]"
    Spolek.sidlo.vlastnik[0].birthday = "[##.##.####]"
    Spolek.sidlo.vlastnik.there_is_another = False
